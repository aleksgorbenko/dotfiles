;; help

;; !  | means mandatory
;; #  | means optional
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;; to understand better how modifiers work in karabiner
;; karabiner definition of mandatory and optional
;; https://pqrs.org/osx/karabiner/json.html#from-event-definition-modifiers

;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;;
;; need to prefix C T O S F with ! or #

;; Media Controls Example
;; [:i :display_brightness_decrement]
;; [:o :display_brightness_increment]
;; [:n :volume_decrement]
;; [:m :volume_increment]


{

:profiles {
	:Default {
		:default true

		;; simultaneous_threshold_milliseconds (def: 50)
		;; keys need to be pressed within this threshold to be considered simultaneous
		:sim     30

		;; to_delayed_action_delay_milliseconds (def: 500)
		;; time after which the key press is counted delayed
		:delay   300

		;; to_if_alone_timeout_milliseconds (def: 1000)
		;; hold for 995s and single tap registered; hold for 1005s and seen as modifier
		:alone   500

		;; to_if_held_down_threshold_milliseconds (def: 500)
		;; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)
		:held    500
	}
}

; You can trigger these from any shortcut below

:templates {
	:alfred "osascript -e 'tell application \"Alfred 5\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
	:km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
	:open "open \"%s\""
}

:input-sources {
	:ru {
		:input_source_id "com.apple.keylayout.Russian-Phonetic"
		:language "ru"
	}
}

:simlayers {
	;; Alphanumeric
	:2-mode {:key :2}
	:3-mode {:key :3}
	:4-mode {:key :4}
	:a-mode {:key :a}
	:b-mode {:key :b}
	:c-mode {:key :c}
	:d-mode {:key :d}
	:e-mode {:key :e}
	:f-mode {:key :f}
	:g-mode {:key :g}
	:i-mode {:key :i}
	:j-mode {:key :j}
	:m-mode {:key :m}
	:n-mode {:key :n}
	:p-mode {:key :p}
	:o-mode {:key :o}
	:q-mode {:key :q}
	:r-mode {:key :r}
	:s-mode {:key :s}
	:t-mode {:key :t}
	:u-mode {:key :u}
	:v-mode {:key :v}
	:w-mode {:key :w}
	:x-mode {:key :x}
	:z-mode {:key :z}

	;; Symbols
	:semicolon-mode {:key :semicolon}
	:slash-mode {:key :slash}
	:backslash-mode {:key :backslash}
	:tilde-mode {:key :grave_accent_and_tilde}
	:dot-mode {:key :period}

	;; Other
	:spacebar-mode {:key :spacebar}
	:caps-mode {:key :caps_lock}
}

:main [

; ALPHANUMERIC KEYS

; 2do lists

{
	:des "2-key - 2do lists"
	:rules [
		:2-mode
		[:a [:km "open 2do all"]]
		[:c [:km "open 2do completed"]]
		[:d [:km "open 2do done"]]
		[:i [:km "open 2do inbox"]]
		[:n [:km "open 2do next"]]
		[:p [:km "open 2do waiting"]]
		[:r [:km "open 2do read"]]
		[:s [:km "open 2do someday"]]
		[:t [:km "open 2do today"]]
		[:v [:km "open 2do watch"]]
		[:w [:km "open 2do work"]]
		[:period [:km "search 2do"]]
	]
}

; projects

{
	:des "3-key - Edit common files"
	:rules [
		:3-mode
		[:d [:km "proj: Dotfiles"]]
		[:g [:km "edit: aliases git"]]
		[:k [:km "edit: Karabiner"]]
		[:l [:km "edit: zshrc local"]]
		[:z [:km "edit: zshrc"]]
	]
}

; ctrl

{
	:des "a-key - "
	:rules [
		:a-mode
			;; [:c [:km "Ask Claude"]]
			;; [:g [:km "Ask ChatGPT"]]
			;; [:l [:km "Ask Google"]]
			;; [:p [:km "Ask Perplexity"]]
	]
}

; break

{
	:des "b-key - Break"
	:rules [
		:b-mode
			[:n [:km "Open news (break)"]]

	]
}

; code test

{
	:des "c-key - Code ?"
	:rules [
		:c-mode
		; [:a [:km "Clone repo to ~/src/clones and open with VS Code"]]
		; [:s [:km "Clone repo to ~/src/clones"]]
		; [:j [:km "test: JS"]]
		; [:k [:km "test: Go"]]
		; [:l [:km "test: Python"]]
	]
}

;

{
	:des "d-key - ?"
	:rules [
		:d-mode

	]
}

;

{
	:des "e-key - ?"
	:rules [
		:e-mode

	]
}


; Text Manipulation

{
	:des "f-key - text Formatting"
	:rules [
		:f-mode

	]
}

;

{
	:des "g-key - ?"
	:rules [
		:g-mode
	]
}

;

{
	:des "i-key - ?"
		:rules [
		:i-mode
	]
}

; tasks

{
	:des "n-key - New tasks"
	:rules [
		:n-mode
			[:w [:km "new 2do work"]]
			[:s [:km "new 2do someday"]]
			[:r [:km "new 2do read"]]
			[:v [:km "new 2do watch"]]
	]
}

; AI

{
	:des "o-key - AI"
	:rules [
		:o-mode
		[:s [:km "Summarise selected text with Apple AI"]]
		[:g [:km "open: ChatGPT"]]
		[:c [:km "open: Claude"]]
	]
}

; alfred

{
	:des "p-key (alfred)"
	:rules [
		:p-mode
		;; [:1 :!C1]
		;; [:2 :!C2]
		;; [:3 :!C3]
		;; [:4 :!C4]
		;; [:5 :!C5]
		;; [:6 :!C6]
		[:b [:alfred "search obsidian" "de.chris-grieser.shimmering-obsidian"]]
		[:d [:alfred "search downloads" "dev.gbko.alfred.directories"]]
		[:e [:alfred "search desktop" "dev.gbko.alfred.directories"]]
		[:k [:alfred "run" "iansinnott.keyboardmaestro"]]
		[:r [:alfred "search repos" "de.xdevcloud.alfred-repos"]]
		[:m [:alfred "search menu bar" "com.folded-paper.menu-bar-search"]]
		[:s [:alfred "shortcuts" "com.alfredapp.vitor.shortcuts"]]
		[:x [:alfred "spot_mini" "com.vdesabou.spotify.mini.player"]]
	]
}

; shift

{
	:des "q-key (cmd + shift)"
	:rules [
		:q-mode
		[:spacebar :!CSOe] ; Selection -> YouTube
		[:open_bracket :!CSopen_bracket]
		[:close_bracket :!CSclose_bracket]
		[:semicolon :!CSsemicolon]
		[:quote :!CSquote]
		[:comma :!CScomma]
		[:period :!CSperiod]
		[:slash :!CSslash]
		[:a :!CSa]
		[:b :!CSb]
		[:c :!CSc]
		[:d :!CSd]
		[:e :!CSe]
		[:f :!CSf]
		[:g :!CSg]
		[:h :!CSh]
		[:i :!CSi]
		[:j :!CSj]
		[:k :!CSk]
		[:l :!CSl]
		[:m :!CSm]
		[:n :!CSn]
		[:o :!CSo]
		[:p :!CSp]
		[:r :!CSr]
		[:s :!CSs]
		[:t :!CSt]
		[:u :!CSu]
		[:v :!CSv]
		[:w :!CSw]
		[:x :!CSx]
		[:y :!CSy]
		[:z :!CSz]
		[:1 :!CS1]
		[:2 :!CS2]
		[:3 :!CS3]
		[:4 :!CS4]
		[:5 :!CS5]
		[:6 :!CS6]
		[:7 :!CS7]
		[:8 :!CS8]
		[:9 :!CS9]
		[:0 :!CS0]
	]
}

; apps

{
	:des "r-key - Reply palettes"
	:rules [
		:r-mode
		[:p [:km "show palette: Personal"]]
		[:t [:km "show palette: Thanks"]]
	]
}

; Snippets

{
	:des "s-key - Snippets"
	:rules [
		:s-mode
	]
}

;

{
	:des "t-key - ?"
	:rules [
		:t-mode

	]
}

; url

{
	:des "u-key - Url mode"
	:rules [
		:u-mode
			[:c [:km "Open current url in Chrome"]]
			[:s [:km "Open current url in Safari"]]
	]
}

; media control

{
	:des "v-key - ?"
	:rules [
		:v-mode

	]
}

; apps

{
	:des "w-key - Apps"
	:rules [
		:w-mode
		[:2 [:km "open: 2Do"]]
		[:a [:km "open: Anki"]]
		[:b [:km "open: Postman"]]
		[:c [:km "open: Chrome"]]
		[:d [:km "open: Discord"]]
		[:e [:km "open: PDF Expert"]]
		[:g [:km "open: GoLand"]]
		[:i [:km "open: iTerm"]]
		[:k [:km "open: Keyboard Maestro"]]
		[:l [:km "open: Slack"]]
		[:m [:km "open: Activity Monitor"]]
		[:n [:km "open: Notion"]]
		[:o [:km "open: Obsidian"]]
		[:p [:km "open: Perplexity"]]
		[:s [:km "open: Safari"]]
		[:t [:km "open: Telegram"]]
		[:v [:km "open: VS Code"]]
		[:x [:km "open: Spotify"]]
		[:y [:km "open: Alacritty"]]
		[:z [:km "open: Zoom"]]
		[:comma [:km "open: XCode"]]
		[:period [:km "open: Finder"]]
	]
}

; spotify

{
	:des "x-key - Music"
	:rules [
		:x-mode

		; Amazon Music
		; [:period [:km "Amazon Music: play next track"]]
		; [:comma [:km "Amazon Music: play previous track"]]
		; [:slash [:km "Amazon Music: play/pause"]]
		; [:quote [:km "Amazon Music: volume up"]]
		; [:semicolon [:km "Amazon Music: volume down"]]

		; Spotify
		[:p [:alfred "show_playlists" "com.vdesabou.spotify.mini.player"]]
		[:o [:km "Paste current Spotify song link"]]

		[:j [:alfred "spot_mini" "com.vdesabou.spotify.mini.player"]]
		[:k [:alfred "show_current_track" "com.vdesabou.spotify.mini.player"]]
		[:n [:alfred "add_current_track_to" "com.vdesabou.spotify.mini.player"]]
		[:m [:alfred "remove_current_track_from" "com.vdesabou.spotify.mini.player"]]

		[:period [:alfred "next" "com.vdesabou.spotify.mini.player"]]
		[:comma [:alfred "previous" "com.vdesabou.spotify.mini.player"]]
		[:slash [:alfred "playpause" "com.vdesabou.spotify.mini.player"]]
		[:quote [:alfred "volume_up" "com.vdesabou.spotify.mini.player"]]
		[:semicolon [:alfred "volume_down" "com.vdesabou.spotify.mini.player"]]
		[:period [:alfred "" "com.vdesabou.spotify.mini.player"]]

		; Playlists - probably don't need?
		; [:semicolon [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:4U7w1cpN9ei5LOzwpobiPQ"]] ; Liquid
		; [:quote [:alfred "play" "com.vdesabou.spotify.mini.player" "spotify:playlist:6OjSvDzNZVny8Uf0YJyx7B"]] ; Ambient Focus
	]
}

; SYMBOLS

{
	:des "tilde-key - ?"
	:rules [
		:tilde-mode

	]
}


; chat

{
	:des "slash-key - Social"
	:rules [
		:slash-mode
		[:c [:km "open: Contacts"]]
		[:s [:km "open: Slack"]]
		[:t [:km "open: Telegram"]]
	]
}

{
	:des "backslash-key - Apps"
	:rules [
		:backslash-mode
		[:2 [:km "open: 2Do"]]
		[:a [:km "open: Anki"]]
		[:c [:km "open: Chrome"]]
		[:d [:km "open: Discord"]]
		[:e [:km "open: PDF Expert"]]
		[:g [:km "open: GoLand"]]
		[:i [:km "open: iTerm"]]
		[:k [:km "open: Keyboard Maestro"]]
		[:l [:km "open: Slack"]]
		[:m [:km "open: Activity Monitor"]]
		[:n [:km "open: Notion"]]
		[:o [:km "open: Obsidian"]]
		[:p [:km "open: Postman"]]
		[:s [:km "open: Safari"]]
		[:t [:km "open: Telegram"]]
		[:v [:km "open: VS Code"]]
		[:x [:km "open: Spotify"]]
		[:y [:km "open: Alacritty"]]
		[:z [:km "open: Zoom"]]
		[:period [:km "open: Finder"]]
	]
}

{
	:des "semicolon-key - ?"
		:rules [
		:semicolon-mode
		[:q :!Sq]
		[:w :!Sw]
		[:e :!Se]
		[:r :!Sr]
		[:t :!St]
		[:y :!Sy]
		[:u :!Su]
		[:i :!Si]
		[:o :!So]
		[:p :!Sp]
		[:a :!Sa]
		[:s :!Ss]
		[:d :!Sd]
		[:f :!Sf]
		[:g :!Sg]
		[:h :!Sh]
		[:j :!Sj]
		[:k :!Sk]
		[:l :!Sl]
		[:z :!Sz]
		[:x :!Sx]
		[:c :!Sc]
		[:v :!Sv]
		[:b :!Sb]
		[:n :!Sn]
		[:m :!Sm]
		[:grave_accent_and_tilde [:!Sgrave_accent_and_tilde]] ; -> ~
		[:1 :!T1]
		[:2 :!T2]
		[:3 :!T3]
		[:4 :!T4]
		[:5 :!T5]
		[:6 :!T6]
	]
}

;; OTHER

; websites

{
	:des "space-key - ?"
	:rules [
		:spacebar-mode

	]
}

; search

{
	:des "caps-key - Ask GPT, Google, Perplexity, Claude etc"
	:rules [
		:caps-mode
		[:c [:km "Ask Claude"]]
		[:g [:km "Ask ChatGPT"]]
		[:l [:km "Ask Google"]]
		[:p [:km "Ask Perplexity"]]
	]
}

;; Language key-remap

{
	:des "russian"
	:rules [
		[:h :x [:ru]] ; ч -> х
		[:x :h [:ru]] ; х -> ч
		[:!Sh :!Sx [:ru]]
		[:!Sx :!Sh [:ru]]

		; [:open_bracket :hyphen [:ru]] ; [ -> ь
		; [:close_bracket :equal_sign [:ru]] ; ] -> ъ
		; [:hyphen :!Ohyphen [:ru]] ; ь -> -
		; [:equal_sign :!Oequal_sign [:ru]] ; ъ -> =

		; :j-mode
		; [:a :q [:ru]] ; ja -> я
		; [:u :open_bracket [:ru]] ; ju -> ю
		; [:o :!Oe [:ru]] ; jo -> ё

		; :z-mode
		; [:h :close_bracket [:ru]] ;-> ж
	]
}

] ; main end
} ; end
